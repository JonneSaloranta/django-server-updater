name: CI/CD

on:
  push:
    branches:
      - main
      - master
      - next
      - beta
      - "*.x"

permissions:
  contents: write
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: test-server
      STACK_NAME: test-server
      STACK_FILE: docker-compose.yml
      REPO_OWNER: ${{ github.repository_owner }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up environment variables
        id: set-env
        run: |
          # Convert GitHub repository owner to lowercase and set it as an environment variable
          echo "REPO_OWNER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

          # Ensure IMAGE_NAME is lowercase and set it as an environment variable
          echo "IMAGE_NAME_LOWER=$(echo '${{ env.IMAGE_NAME }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ env.IMAGE_NAME_LOWER }}:latest

  release:
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    name: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version: lts/*

      - name: Clean install dependencies
        run: npm clean-install

      - name: Audit npm signatures
        run: corepack npm audit signatures

      - name: Run semantic-release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.SEMANTIC_RELEASE_BOT_NPM_TOKEN }}

  create_release:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version: lts/*

      - name: Install dependencies
        run: npm install

      - name: Install release-notes-generator
        run: npm install @semantic-release/release-notes-generator -D

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Generate Release Notes
        run: npx semantic-release --dry-run --no-ci --plugins=@semantic-release/release-notes-generator

      - name: Upload Release Notes
        uses: actions/upload-artifact@v2
        with:
          name: release-notes
          path: release-notes.md
