name: CI/CD

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: test-server
      STACK_NAME: test-server
      STACK_FILE: docker-compose.yml
      REPO_OWNER: ${{ github.repository_owner }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up environment variables
        id: set-env
        run: |
          # Convert GitHub repository owner to lowercase and set it as an environment variable
          echo "REPO_OWNER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

          # Ensure IMAGE_NAME is lowercase and set it as an environment variable
          echo "IMAGE_NAME_LOWER=$(echo '${{ env.IMAGE_NAME }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REPO_OWNER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ env.IMAGE_NAME_LOWER }}:latest

  create_release:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Generate Release Notes
        id: generate_release_notes
        uses: docker://ghcr.io/github/release-notes-generator/release-notes-generator:latest
        with:
          configuration-path: .github/release-notes.yml
          output-file: release-notes.md

      - name: Upload Release Notes
        uses: actions/upload-artifact@v2
        with:
          name: release-notes
          path: release-notes.md
